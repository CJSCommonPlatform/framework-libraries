package uk.gov.moj.cpp.accesscontrol;

import uk.gov.moj.cpp.accesscontrol.drools.Outcome;
import uk.gov.moj.cpp.accesscontrol.drools.Action;

global uk.gov.moj.cpp.accesscontrol.common.providers.UserAndGroupProvider userAndGroupProvider;



rule "Command - Access control for progression.command.add-defendant-additional-information"
  when
    $outcome: Outcome();
    $action: Action(name == "progression.command.add-defendant-additional-information");
    eval(userAndGroupProvider.isMemberOfAnyOfTheSuppliedGroups($action, "Judiciary", "Case Officer"))
  then
    $outcome.setSuccess(true);
end

rule "Command - Access control for progression.command.prepare-for-sentence-hearing"
  when
    $outcome: Outcome();
    $action: Action(name == "progression.command.prepare-for-sentence-hearing");
    eval(userAndGroupProvider.isMemberOfAnyOfTheSuppliedGroups($action, "Listing Officers", "Judiciary", "Case Officer"))
  then
    $outcome.setSuccess(true);
end


rule "Command - Access control for progression.command.sending-committal-hearing-information"
  when
    $outcome: Outcome();
    $action: Action(name == "progression.command.sending-committal-hearing-information");
    eval(userAndGroupProvider.isMemberOfAnyOfTheSuppliedGroups($action, "Crown Court Admin", "Listing Officers"))
  then
    $outcome.setSuccess(true);
end

rule "Command - Access control for progression.command.case-to-be-assigned"
  when
    $outcome: Outcome();
    $action: Action(name == "progression.command.case-to-be-assigned");
    eval(userAndGroupProvider.isMemberOfAnyOfTheSuppliedGroups($action, "Listing Officers", "Crown Court Admin"))
  then
    $outcome.setSuccess(true);
end

rule "Command - Access control for progression.command.case-assigned-for-review"
  when
    $outcome: Outcome();
    $action: Action(name == "progression.command.case-assigned-for-review");
    eval(userAndGroupProvider.isMemberOfAnyOfTheSuppliedGroups($action, "Listing Officers" ))
  then
    $outcome.setSuccess(true);
end


rule "Command - Access control for progression.command.sentence-hearing-date"
  when
    $outcome: Outcome();
    $action: Action(name == "progression.command.sentence-hearing-date");
    eval(userAndGroupProvider.isMemberOfAnyOfTheSuppliedGroups($action, "Crown Court Admin", "Listing Officers"))
  then
    $outcome.setSuccess(true);
end


rule "Command - Access control for progression.command.add-case-to-crown-court"
  when
    $outcome: Outcome();
    $action: Action(name == "progression.command.add-case-to-crown-court");
    eval(userAndGroupProvider.isMemberOfAnyOfTheSuppliedGroups($action, "Crown Court Admin", "Listing Officers"))
  then
    $outcome.setSuccess(true);
end


rule "Command - Access control for progression.command.no-more-information-required"
  when
    $outcome: Outcome();
    $action: Action(name == "progression.command.no-more-information-required");
    eval(userAndGroupProvider.isMemberOfAnyOfTheSuppliedGroups($action, "Judiciary", "Case Officer"))
  then
    $outcome.setSuccess(true);
end

rule "Command - Access control for progression.command.request-psr-for-defendants"
  when
    $outcome: Outcome();
    $action: Action(name == "progression.command.request-psr-for-defendants");
    eval(userAndGroupProvider.isMemberOfAnyOfTheSuppliedGroups($action, "Crown Court Admin", "Listing Officers"))
  then
    $outcome.setSuccess(true);
end


rule "Command - Access control for progression.command.upload-case-documents"
  when
    $outcome: Outcome();
    $action: Action(name == "progression.command.upload-case-documents");
    eval(userAndGroupProvider.isMemberOfAnyOfTheSuppliedGroups($action, "Crown Court Admin", "Listing Officers"));
  then
    $outcome.setSuccess(true);
end

rule "Command - Access control for progression.command.add-sentence-hearing"
  when
    $outcome: Outcome();
    $action: Action(name == "progression.command.add-sentence-hearing");
    eval(userAndGroupProvider.isMemberOfAnyOfTheSuppliedGroups($action, "Crown Court Admin", "Listing Officers"))
  then
    $outcome.setSuccess(true);
end

rule "Command - Access control for progression.command.defendant-document"
  when
    $outcome: Outcome();
    $action: Action(name == "progression.command.defendant-document");
    eval(userAndGroupProvider.isMemberOfAnyOfTheSuppliedGroups($action, "Crown Court Admin", "Listing Officers"))
  then
    $outcome.setSuccess(true);
end